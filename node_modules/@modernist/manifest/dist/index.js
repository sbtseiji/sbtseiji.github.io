"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
var log_1 = require("@modernist/log");
var util_1 = require("@modernist/util");
var log = log_1.default("@modernist/manifest");
var createManifest = function () {
    log(templateObject_1 || (templateObject_1 = __makeTemplateObject(["Creating new manifest"], ["Creating new manifest"])));
    var manifest = [];
    var update = function (newEntry) {
        log(templateObject_2 || (templateObject_2 = __makeTemplateObject(["Updating manifest: ", " update: ", ""], ["Updating manifest: ", " update: ", ""])), manifest, newEntry);
        var oldEntryIndex = manifest.findIndex(function (entry) {
            return entry.path === newEntry.path;
        });
        log(templateObject_3 || (templateObject_3 = __makeTemplateObject(["Index of old entry: ", ""], ["Index of old entry: ", ""])), oldEntryIndex);
        // eslint-disable-next-line no-bitwise
        if (~oldEntryIndex) {
            var oldEntry = manifest[oldEntryIndex];
            log(templateObject_4 || (templateObject_4 = __makeTemplateObject(["Updating old entry: ", ""], ["Updating old entry: ", ""])), oldEntry);
            manifest[oldEntryIndex] = util_1.merge(oldEntry, newEntry);
            return;
        }
        log(templateObject_5 || (templateObject_5 = __makeTemplateObject(["Adding new entry"], ["Adding new entry"])));
        manifest.push(newEntry);
    };
    var get = function () {
        log(templateObject_6 || (templateObject_6 = __makeTemplateObject(["Retrieving manifest: ", ""], ["Retrieving manifest: ", ""])), manifest);
        return __spreadArray([], __read(manifest));
    };
    return { update: update, get: get };
};
exports.default = createManifest();
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
//# sourceMappingURL=index.js.map