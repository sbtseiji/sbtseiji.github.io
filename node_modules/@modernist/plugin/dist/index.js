"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var log_1 = require("@modernist/log");
var manifest_1 = require("@modernist/manifest");
var log = log_1.default("@modernist/plugin");
var plugin = function (plugins) {
    log(templateObject_1 || (templateObject_1 = __makeTemplateObject(["Got plugins: ", ""], ["Got plugins: ", ""])), plugins);
    return function (command, config, rootDir) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    log(templateObject_2 || (templateObject_2 = __makeTemplateObject(["Got command: ", ", config: ", ", rootDir: ", ""], ["Got command: ", ", config: ", ", rootDir: ", ""])), command, config, rootDir);
                    log(templateObject_3 || (templateObject_3 = __makeTemplateObject(["Stacking plugins to be called first to last"], ["Stacking plugins to be called first to last"])));
                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                    // @ts-ignore - TypeScript does not play well with reduce, but this works, I promise
                    return [4 /*yield*/, plugins.reduce(function (prev, current) { return __awaiter(void 0, void 0, void 0, function () {
                            var next;
                            return __generator(this, function (_a) {
                                log(templateObject_4 || (templateObject_4 = __makeTemplateObject(["Adding plugin: ", ""], ["Adding plugin: ", ""])), current);
                                next = function () { return __awaiter(void 0, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0:
                                                log(templateObject_5 || (templateObject_5 = __makeTemplateObject(["Next called"], ["Next called"])));
                                                return [4 /*yield*/, prev];
                                            case 1:
                                                _a.sent();
                                                next.called = true;
                                                return [2 /*return*/, manifest_1.default.get()];
                                        }
                                    });
                                }); };
                                next.called = false;
                                log(templateObject_6 || (templateObject_6 = __makeTemplateObject(["Wrapping plugin to guard against not calling next()"], ["Wrapping plugin to guard against not calling next()"])));
                                return [2 /*return*/, (function () { return __awaiter(void 0, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            switch (_a.label) {
                                                case 0: return [4 /*yield*/, current(command, config, rootDir, next)];
                                                case 1:
                                                    _a.sent();
                                                    if (!!next.called) return [3 /*break*/, 3];
                                                    log(templateObject_7 || (templateObject_7 = __makeTemplateObject(["Next was not called, calling it after plugin"], ["Next was not called, calling it after plugin"])));
                                                    return [4 /*yield*/, next()];
                                                case 2:
                                                    _a.sent();
                                                    _a.label = 3;
                                                case 3: return [2 /*return*/];
                                            }
                                        });
                                    }); })()];
                            });
                        }); }, Promise.resolve)];
                case 1:
                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                    // @ts-ignore - TypeScript does not play well with reduce, but this works, I promise
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); };
};
exports.default = plugin;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=index.js.map